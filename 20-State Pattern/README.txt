状态模式:
       1.定义:
            对有状态的对象,把复杂的"判断逻辑"提取到不同的状态对象中,允许状态对象在其内部状态发生改变时改变其行为.

       2.结构:
            (A)环境(Context)角色: 也称为上下文,它定义了客户程序需要的接口,维护一个当前状态,
                                并将与状态相关的操作委托给当前状态对象来处理.
            (B)抽象状态(State)角色: 定义一个接口,用以封装环境对象中的特定状态所对应的行为.
            (C)具体状态(Concrete State)角色: 实现抽象状态所对应的行为.

       3.使用场景:
            a.当一个对象的行为取决于它的状态,并且它必须在运行时根据状态改变它的行为时,就可以考虑使用状态模式.
            b.一个操作中含有庞大的分支结构,并且这些分支决定于对象的状态时.