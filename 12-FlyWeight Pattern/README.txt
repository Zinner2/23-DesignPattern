享元模式：
    1.定义：通过共享技术来有效的支持大量细粒度对象的复用.
      优点：相同的对象只保存一份,降低了系统中对象的数量,从而降低了系统中细粒度对象给内存带来的压力.
      缺点：为了使对象能够共享,需要将一些不能共享的部分外部化,这将增加系统的复杂度.
            读取享元模式的外部状态会使得运行时间稍微变长.
    2.结构：
        (1)抽象享元角色(Abstract FlyWeight) : 是所有具体享元类的基类,为具体享元类提供一个公共的接口.
        (2)具体享元角色(Concrete FlyWeight) : 实现抽象享元角色中所规定的接口.
        (3)非享元角色(Unsharable FlyWeight) : 不可共享的外部状态,它以参数的形式注入到具体享元的相关方法里.
        (4)享元工厂(FlyWeight Factory) : 负责创建和管理享元角色.
    3.使用场景：
